import pyautogui
import webbrowser
import time
import os
from urllib.parse import quote_plus
import anthropic
from PIL import Image
import base64
import io
import dotenv

dotenv.load_dotenv()


# ============================================
# Stock Bot with Claude AI Agent - macOS Version
# Advanced AI-powered web scraping and analysis
# ============================================

# --- Configuration ---
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key
print("=" * 80)
print("üîë ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Anthropic API Key")
print("=" * 80)

# ‡∏•‡∏≠‡∏á‡∏´‡∏≤ API Key ‡∏à‡∏≤‡∏Å environment variable ‡∏Å‡πà‡∏≠‡∏ô
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY")

if ANTHROPIC_API_KEY:
    print("‚úÖ ‡∏û‡∏ö API Key ‡∏à‡∏≤‡∏Å environment variable")
else:
    print("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö API Key ‡∏à‡∏≤‡∏Å environment variable")
    print("\nüìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Anthropic API Key ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")
    print("   (‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å: https://console.anthropic.com/settings/keys)")
    print("   ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: sk-ant-api03-xxxxx...")
    ANTHROPIC_API_KEY = input("\nüîë API Key: ").strip()

    if not ANTHROPIC_API_KEY:
        print("\n‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö API Key! ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        print("\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key:")
        print("   1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://console.anthropic.com/")
        print("   2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings > API Keys")
        print("   3. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key ‡πÉ‡∏´‡∏°‡πà")
        print("   4. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å API Key")
        print("   5. ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà API Key")
        print("\n   ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô environment variable:")
        print("   export ANTHROPIC_API_KEY='sk-ant-api03-your-key-here'")
        print("\nüí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì $0.10-0.50 ‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        print("\nüí° ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏£‡∏µ: python stock_bot_macos_no_api.py")
        exit(1)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Key ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
if not ANTHROPIC_API_KEY.startswith("sk-ant-"):
    print("\n‚ö†Ô∏è  API Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 'sk-ant-'")
    print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    exit(1)

print(f"‚úÖ API Key: {ANTHROPIC_API_KEY[:20]}...")
print("=" * 80)

try:
    client = anthropic.Anthropic(api_key=ANTHROPIC_API_KEY)
    print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Anthropic API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
except Exception as e:
    print(f"\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Anthropic API: {e}")
    print("\nüí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    exit(1)

# --- 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ---
print("=" * 80)
print("ü§ñ Stock Bot with Claude AI Agent - macOS Version")
print("=" * 80)
print("üß† AI-Powered Dynamic Search & Analysis")
print("=" * 80)

# ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î
print("\nüìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:")
print("   1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (Dynamic Search)")
print("   2. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢ (Stock Focus)")
print("   3. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á (Custom Query)")

mode = input("\nüî¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î (1-3): ").strip()

if mode == "1":
    search_query = input("\nüîç ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: ").strip()
    analysis_prompt = f"‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö '{search_query}' ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ô‡∏µ‡πâ"
elif mode == "2":
    search_query = "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ"
    analysis_prompt = "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢ ‡∏£‡∏≤‡∏Ñ‡∏≤ ‡∏î‡∏±‡∏ä‡∏ô‡∏µ ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ô‡∏µ‡πâ"
elif mode == "3":
    search_query = input("\nüîç ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: ").strip()
    analysis_prompt = input("üìù ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: ").strip()
else:
    print("‚ùå ‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    exit(1)

num_websites = int(input("\nüåê ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏° (1-10): ").strip() or "3")

print(f"\n‚úÖ ‡πÇ‡∏´‡∏°‡∏î: {mode}")
print(f"üîç ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {search_query}")
print(f"üåê ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {num_websites}")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö permissions ‡∏ö‡∏ô macOS
print("\n‚ö†Ô∏è  ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï Accessibility & Screen Recording")
print("System Settings > Privacy & Security > Accessibility")
print("System Settings > Privacy & Security > Screen Recording")
print("=" * 80)

print("\n‚è∞ ‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...")
time.sleep(5)


# --- 2. Helper Functions ---
def encode_image_to_base64(image_path):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô base64 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Claude"""
    with Image.open(image_path) as img:
        # Resize ‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (Claude ‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î)
        max_size = (1568, 1568)
        img.thumbnail(max_size, Image.Resampling.LANCZOS)

        # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô base64
        buffered = io.BytesIO()
        img.save(buffered, format="PNG")
        img_bytes = buffered.getvalue()
        return base64.standard_b64encode(img_bytes).decode("utf-8")


def analyze_screenshot_with_claude(image_path, prompt):
    """‡πÉ‡∏ä‡πâ Claude AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠"""
    try:
        print(f"\nüß† Claude AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û...")

        # ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô base64
        image_base64 = encode_image_to_base64(image_path)

        # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Claude API
        message = client.messages.create(
model="claude-sonnet-4-5",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {
                            "type": "image",
                            "source": {
                                "type": "base64",
                                "media_type": "image/png",
                                "data": image_base64,
                            },
                        },
                        {"type": "text", "text": prompt},
                    ],
                }
            ],
        )

        return message.content[0].text

    except Exception as e:
        return f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}"


def ask_claude_for_insights(analysis_results):
    """‡∏Ç‡∏≠‡πÉ‡∏´‡πâ Claude ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ insights ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    try:
        print(f"\nüß† Claude AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")

        combined_text = "\n\n".join(
            [f"‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå {i+1}:\n{result}" for i, result in enumerate(analysis_results)]
        )

        message = client.messages.create(
            model="claude-sonnet-4-5",
            max_tokens=4096,
            messages=[
                {
                    "role": "user",
                    "content": f"""‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:

{combined_text}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
1. ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏ö
2. ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏´‡∏•‡πà‡∏á
3. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å (Insights)
4. ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á
5. ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à

‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö""",
                }
            ],
        )

        return message.content[0].text

    except Exception as e:
        return f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}"


# --- 3. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ---
print(f"\nüîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {search_query}")
encoded_search = quote_plus(search_query)
search_url = f"https://www.google.com/search?q={encoded_search}"

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
print("\nüåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå...")
webbrowser.open(search_url)
time.sleep(8)

# ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
screen_width, screen_height = pyautogui.size()
print(f"üìê ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠: {screen_width}x{screen_height}")

# ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
print("\nüì∏ ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...")
screenshot = pyautogui.screenshot()
search_results_path = "ai_search_results.png"
screenshot.save(search_results_path)
print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: {search_results_path}")

# ‡πÉ‡∏´‡πâ Claude ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
print("\nü§ñ ‡πÉ‡∏´‡πâ Claude AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...")
search_analysis = analyze_screenshot_with_claude(
    search_results_path,
    f"‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡∏≠‡∏á Google ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '{search_query}' ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ ‡∏ö‡∏≠‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à 5 ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•",
)
print("\n" + "=" * 80)
print("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:")
print("=" * 80)
print(search_analysis)

# --- 4. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ---
analysis_results = []
screenshot_counter = 1

# ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
search_positions = [
    (screen_width // 2, int(screen_height * 0.40)),
    (screen_width // 2, int(screen_height * 0.52)),
    (screen_width // 2, int(screen_height * 0.64)),
    (screen_width // 2, int(screen_height * 0.76)),
    (screen_width // 2, int(screen_height * 0.88)),
]

for i in range(min(num_websites, len(search_positions))):
    print(f"\n{'='*80}")
    print(f"üîó [{i+1}/{num_websites}] ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà {i+1}")
    print(f"{'='*80}")

    try:
        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        print(f"üñ±Ô∏è  ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå...")
        pyautogui.click(search_positions[i][0], search_positions[i][1])
        time.sleep(6)

        # ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
        screenshot = pyautogui.screenshot()
        website_path = f"ai_website_{i+1:02d}_main.png"
        screenshot.save(website_path)
        print(f"üì∏ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: {website_path}")
        screenshot_counter += 1

        # ‡πÉ‡∏´‡πâ Claude ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
        website_analysis = analyze_screenshot_with_claude(website_path, analysis_prompt)

        print("\n" + "-" * 80)
        print(f"üß† ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà {i+1}:")
        print("-" * 80)
        print(website_analysis)
        print("-" * 80)

        analysis_results.append(website_analysis)

        # Scroll ‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
        print(f"\nüìú Scroll ‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°...")
        pyautogui.scroll(-3)
        time.sleep(2)

        # ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏á scroll
        screenshot = pyautogui.screenshot()
        scrolled_path = f"ai_website_{i+1:02d}_scrolled.png"
        screenshot.save(scrolled_path)
        print(f"üì∏ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: {scrolled_path}")

        # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏á scroll
        scrolled_analysis = analyze_screenshot_with_claude(
            scrolled_path,
            f"‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ô‡∏µ‡πâ ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ö‡πâ‡∏≤‡∏á",
        )

        print("\n" + "-" * 80)
        print(f"üß† ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:")
        print("-" * 80)
        print(scrolled_analysis)
        print("-" * 80)

        analysis_results.append(scrolled_analysis)

        # ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        if i < num_websites - 1:
            print(f"\n‚¨ÖÔ∏è  ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...")
            pyautogui.hotkey("command", "[")
            time.sleep(3)

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        continue

# --- 5. ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ Insights ‡∏à‡∏≤‡∏Å Claude ---
print("\n" + "=" * 80)
print("üéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏î‡∏¢ Claude AI")
print("=" * 80)

final_insights = ask_claude_for_insights(analysis_results)
print(final_insights)

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
report_path = "ai_analysis_report.txt"
with open(report_path, "w", encoding="utf-8") as f:
    f.write("=" * 80 + "\n")
    f.write("ü§ñ Stock Bot AI Analysis Report\n")
    f.write("=" * 80 + "\n\n")
    f.write(f"üîç ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {search_query}\n")
    f.write(f"üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {time.strftime('%Y-%m-%d %H:%M:%S')}\n")
    f.write(f"üåê ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {num_websites}\n\n")

    f.write("=" * 80 + "\n")
    f.write("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤\n")
    f.write("=" * 80 + "\n\n")
    f.write(search_analysis + "\n\n")

    for i, result in enumerate(analysis_results, 1):
        f.write("=" * 80 + "\n")
        f.write(
            f"üåê ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà {(i+1)//2 + (i%2)} - {'‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å' if i%2==1 else '‡∏´‡∏•‡∏±‡∏á Scroll'}\n"
        )
        f.write("=" * 80 + "\n\n")
        f.write(result + "\n\n")

    f.write("=" * 80 + "\n")
    f.write("üéØ ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞ Insights\n")
    f.write("=" * 80 + "\n\n")
    f.write(final_insights + "\n")

print(f"\n‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà: {report_path}")

# --- 6. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---
print("\n" + "=" * 80)
print("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
print("=" * 80)

created_files = [
    f for f in os.listdir(".") if f.startswith("ai_") and f.endswith(".png")
]
created_files.sort()

print(f"\nüìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: {len(created_files)} ‡πÑ‡∏ü‡∏•‡πå")
for filename in created_files:
    size = os.path.getsize(filename) / 1024
    print(f"   ‚úÖ {filename} ({size:.2f} KB)")

print(f"\nüìÑ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: {report_path}")
print(f"üìÇ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {os.path.abspath('.')}")

print("\nüí° ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥:")
print("   1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google")
print("   2. ‡πÉ‡∏´‡πâ Claude AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")
print("   3. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
print("   4. ‡πÉ‡∏´‡πâ Claude AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡πá‡∏ö")
print("   5. ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ Insights ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
print("   6. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")

print("\nüé® ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©:")
print("   ‚úÖ AI-Powered Analysis")
print("   ‚úÖ Dynamic Search")
print("   ‚úÖ Multi-website Comparison")
print("   ‚úÖ Intelligent Insights")
print("   ‚úÖ Comprehensive Report")

print("\n" + "=" * 80)
print("üéâ ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
print("=" * 80)
