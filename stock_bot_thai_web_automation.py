import webbrowser
import time
import os
import pyautogui
from PIL import ImageGrab
import google.generativeai as genai
import dotenv

dotenv.load_dotenv()

# ============================================
# Stock Bot - Thai Stock Market Web Automation
# ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡πá‡∏ö
# ============================================

# --- Configuration ---
print("=" * 80)
print("ü§ñ Stock Bot - Thai Stock Market Web Automation")
print("=" * 80)
print("üìä ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
print("=" * 80)

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå (Optional)
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
use_ai_analysis = False

if GEMINI_API_KEY:
    try:
        genai.configure(api_key=GEMINI_API_KEY)
        model = genai.GenerativeModel('gemini-2.0-flash-exp')
        test_response = model.generate_content("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ")
        print("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Gemini API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ AI")
        use_ai_analysis = True
    except:
        print("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Gemini API - ‡∏à‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß")
else:
    print("‚ÑπÔ∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö Gemini API Key - ‡∏à‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

print("=" * 80)

# --- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢ ---
THAI_STOCK_WEBSITES = [
    {
        "name": "SET - ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏î‡∏±‡∏ä‡∏ô‡∏µ",
        "url": "https://www.set.or.th/th/market/index/set/overview",
        "description": "‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ - ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET",
        "wait_time": 8
    },
    {
        "name": "SETTRADE - ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏ß‡∏∞‡∏ï‡∏•‡∏≤‡∏î",
        "url": "https://www.settrade.com/th/market/overview",
        "description": "SETTRADE - ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢",
        "wait_time": 8
    },
    {
        "name": "Investing.com - SET Index",
        "url": "https://th.investing.com/indices/thailand-set",
        "description": "Investing.com - ‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå SET",
        "wait_time": 7
    },
    {
        "name": "SET - ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå",
        "url": "https://www.set.or.th/th/market/product/stock/quote",
        "description": "‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå",
        "wait_time": 7
    },
    {
        "name": "RYT9 - ‡∏Ç‡πà‡∏≤‡∏ß‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢",
        "url": "https://www.ryt9.com/th/tag/%E0%B8%AB%E0%B8%B8%E0%B9%89%E0%B8%99%E0%B9%84%E0%B8%97%E0%B8%A2",
        "description": "RYT9 - ‡∏Ç‡πà‡∏≤‡∏ß‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
        "wait_time": 6
    },
    {
        "name": "Investing.com - SET50",
        "url": "https://th.investing.com/indices/set-50",
        "description": "Investing.com - ‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET50",
        "wait_time": 7
    },
    {
        "name": "TradingView - SET",
        "url": "https://th.tradingview.com/symbols/SET-SET/",
        "description": "TradingView - ‡∏ä‡∏≤‡∏£‡πå‡∏ï‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET",
        "wait_time": 8
    },
    {
        "name": "SET - ‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET100",
        "url": "https://www.set.or.th/th/market/index/set100/overview",
        "description": "‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ - ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏î‡∏±‡∏ä‡∏ô‡∏µ SET100",
        "wait_time": 7
    },
    {
        "name": "SETTRADE - Top 20",
        "url": "https://www.settrade.com/th/market/overview/top-20",
        "description": "SETTRADE - ‡∏´‡∏∏‡πâ‡∏ô Top 20 ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î",
        "wait_time": 7
    },
    {
        "name": "XTB - ‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
        "url": "https://www.xtb.com/th",
        "description": "XTB - ‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏ó‡∏£‡∏î‡∏´‡∏∏‡πâ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
        "wait_time": 6
    }
]

# --- ‡∏ñ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÉ‡∏î‡∏ö‡πâ‡∏≤‡∏á ---
print("\nüìã ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:")
for i, website in enumerate(THAI_STOCK_WEBSITES, 1):
    print(f"   {i}. {website['name']}")
    print(f"      URL: {website['url']}")
    print(f"      ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: {website['description']}")
    print()

print("üî¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î:")
print("   - ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÄ‡∏ä‡πà‡∏ô 1,2,3 ‡∏´‡∏£‡∏∑‡∏≠ 1-5)")
print("   - ‡∏û‡∏¥‡∏°‡∏û‡πå 'all' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
print("   - ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏´‡∏•‡∏±‡∏Å 5 ‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏£‡∏Å")

choice = input("\nüéØ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ").strip().lower()

# ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
selected_websites = []

if choice == "" or choice == "all":
    if choice == "all":
        selected_websites = THAI_STOCK_WEBSITES
        print(f"‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ({len(selected_websites)} ‡πÄ‡∏ß‡πá‡∏ö)")
    else:
        selected_websites = THAI_STOCK_WEBSITES[:5]
        print(f"‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏´‡∏•‡∏±‡∏Å 5 ‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏£‡∏Å")
else:
    # ‡πÅ‡∏õ‡∏•‡∏á input ‡πÄ‡∏õ‡πá‡∏ô list ‡∏Ç‡∏≠‡∏á index
    try:
        if '-' in choice:
            # Range (‡πÄ‡∏ä‡πà‡∏ô 1-5)
            start, end = choice.split('-')
            indices = range(int(start), int(end) + 1)
        elif ',' in choice:
            # Multiple (‡πÄ‡∏ä‡πà‡∏ô 1,2,5)
            indices = [int(x.strip()) for x in choice.split(',')]
        else:
            # Single (‡πÄ‡∏ä‡πà‡∏ô 1)
            indices = [int(choice)]

        selected_websites = [THAI_STOCK_WEBSITES[i-1] for i in indices if 1 <= i <= len(THAI_STOCK_WEBSITES)]
        print(f"‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å {len(selected_websites)} ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
    except:
        print("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (5 ‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏£‡∏Å)")
        selected_websites = THAI_STOCK_WEBSITES[:5]

if not selected_websites:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
    exit(1)

print("\n" + "=" * 80)
print(f"üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û {len(selected_websites)} ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
print("=" * 80)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏û
screenshot_folder = "thai_stock_screenshots"
os.makedirs(screenshot_folder, exist_ok=True)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û ---
def capture_screenshot(filename):
    """‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    try:
        screenshot = ImageGrab.grab()
        filepath = os.path.join(screenshot_folder, filename)
        screenshot.save(filepath)
        print(f"   ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û: {filepath}")
        return filepath
    except Exception as e:
        print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ: {e}")
        return None

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ AI ---
def analyze_screenshot(image_path, website_info):
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏î‡πâ‡∏ß‡∏¢ Gemini AI"""
    if not use_ai_analysis:
        return None

    try:
        from PIL import Image
        img = Image.open(image_path)

        prompt = f"""‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ô‡∏µ‡πâ:

‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {website_info['name']}
‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: {website_info['description']}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ:
1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡∏†‡∏≤‡∏û (‡∏î‡∏±‡∏ä‡∏ô‡∏µ, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢)
2. ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î (‡∏Ç‡∏∂‡πâ‡∏ô/‡∏•‡∏á/‡πÑ‡∏ã‡∏î‡πå‡πÄ‡∏ß‡∏¢‡πå)
3. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
4. ‡∏Ç‡πâ‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°

‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô"""

        response = model.generate_content([prompt, img])

        if response.text:
            return response.text
        else:
            return "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏î‡πâ (‡∏ñ‡∏π‡∏Å block ‡πÇ‡∏î‡∏¢ safety filters)"

    except Exception as e:
        return f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: {str(e)}"

# --- ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
all_results = []

# --- ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ---
for i, website in enumerate(selected_websites, 1):
    print(f"\n{'='*80}")
    print(f"üåê [{i}/{len(selected_websites)}] {website['name']}")
    print(f"{'='*80}")
    print(f"üîó URL: {website['url']}")
    print(f"üìù ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: {website['description']}")

    # ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
    print(f"‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå...")
    webbrowser.open(website['url'])

    # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÇ‡∏´‡∏•‡∏î
    wait_time = website['wait_time']
    print(f"‚è∞ ‡∏£‡∏≠ {wait_time} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à...")
    time.sleep(wait_time)

    # ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å
    screenshot_name = f"{i:02d}_{website['name'].replace(' ', '_').replace('-', '_')}_main.png"
    print(f"üì∏ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏Å...")
    main_screenshot = capture_screenshot(screenshot_name)

    # Scroll ‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    print(f"üìú Scroll ‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°...")
    pyautogui.scroll(-500)  # Scroll ‡∏•‡∏á
    time.sleep(2)

    screenshot_name_scroll = f"{i:02d}_{website['name'].replace(' ', '_').replace('-', '_')}_scrolled.png"
    print(f"üì∏ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏•‡∏±‡∏á scroll...")
    scrolled_screenshot = capture_screenshot(screenshot_name_scroll)

    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ AI (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    analysis = None
    if use_ai_analysis and main_screenshot:
        print(f"üß† ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ Google Gemini AI...")
        analysis = analyze_screenshot(main_screenshot, website)
        if analysis:
            print(f"\nüìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:")
            print("-" * 80)
            print(analysis)
            print("-" * 80)

    # ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    result = {
        'index': i,
        'name': website['name'],
        'url': website['url'],
        'description': website['description'],
        'main_screenshot': main_screenshot,
        'scrolled_screenshot': scrolled_screenshot,
        'ai_analysis': analysis
    }
    all_results.append(result)

    print(f"‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà {i}")

    # ‡∏û‡∏±‡∏Å‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
    if i < len(selected_websites):
        print(f"\n‚è≥ ‡∏û‡∏±‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...")
        time.sleep(3)

# --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ ---
print("\n" + "=" * 80)
print("üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ...")
print("=" * 80)

report_path = os.path.join(screenshot_folder, "analysis_report.txt")

with open(report_path, "w", encoding="utf-8") as f:
    f.write("=" * 80 + "\n")
    f.write("ü§ñ Stock Bot - Thai Stock Market Web Automation Report\n")
    f.write("=" * 80 + "\n\n")
    f.write(f"üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {time.strftime('%Y-%m-%d %H:%M:%S')}\n")
    f.write(f"üåê ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {len(selected_websites)}\n")
    f.write(f"ü§ñ AI Analysis: {'‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' if use_ai_analysis else '‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}\n\n")

    for result in all_results:
        f.write("=" * 80 + "\n")
        f.write(f"[{result['index']}] {result['name']}\n")
        f.write("=" * 80 + "\n")
        f.write(f"üîó URL: {result['url']}\n")
        f.write(f"üìù ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: {result['description']}\n")
        f.write(f"üì∏ ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å: {result['main_screenshot']}\n")
        f.write(f"üì∏ ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏á scroll: {result['scrolled_screenshot']}\n\n")

        if result['ai_analysis']:
            f.write("üß† ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏î‡∏¢ AI:\n")
            f.write("-" * 80 + "\n")
            f.write(result['ai_analysis'] + "\n")
            f.write("-" * 80 + "\n\n")
        else:
            f.write("‚ÑπÔ∏è  ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ AI\n\n")

print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà: {report_path}")
print(f"üìÇ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {os.path.abspath(report_path)}")
print(f"üìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏†‡∏≤‡∏û: {os.path.abspath(screenshot_folder)}")

# --- ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---
print("\n" + "=" * 80)
print("üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!")
print("=" * 80)
print(f"‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: {len(selected_websites)} ‡πÄ‡∏ß‡πá‡∏ö")
print(f"üì∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(selected_websites) * 2} ‡∏†‡∏≤‡∏û")
print(f"üìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå: {screenshot_folder}/")
print(f"üìù ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: {report_path}")

if use_ai_analysis:
    print(f"üß† AI Analysis: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Gemini 2.0 Flash)")
else:
    print(f"‚ÑπÔ∏è  AI Analysis: ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

print("\nüí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:")
print("   - ‡πÄ‡∏û‡∏¥‡πà‡∏° Gemini API Key ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ AI")
print("   - ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: export GEMINI_API_KEY='your-key-here'")
print("   - ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà: GEMINI_API_KEY=your-key-here")

print("\nüí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢:")
print("   - Gemini 2.0 Flash: ‡∏ü‡∏£‡∏µ! (15 requests/minute)")
print("   - Screenshot: ‡∏ü‡∏£‡∏µ! (‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á)")

print("\nüöÄ ‡∏£‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà:")
print("   python stock_bot_thai_web_automation.py")
print("=" * 80)
