#!/usr/bin/env python3
"""
Test script for Google Gemini API Key
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Key ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
"""

import os
import sys

print("=" * 80)
print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Gemini API Key")
print("=" * 80)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á google-generativeai ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
try:
    import google.generativeai as genai
    print("‚úÖ ‡∏û‡∏ö google-generativeai module")
except ImportError:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö google-generativeai module")
    print("\nüí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô:")
    print("   pip install google-generativeai")
    sys.exit(1)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

if GEMINI_API_KEY:
    print(f"‚úÖ ‡∏û‡∏ö API Key ‡∏à‡∏≤‡∏Å environment: {GEMINI_API_KEY[:20]}...")
else:
    print("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö API Key ‡∏à‡∏≤‡∏Å environment variable")
    print("\nüìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Google Gemini API Key:")
    GEMINI_API_KEY = input("üîë API Key: ").strip()

if not GEMINI_API_KEY:
    print("\n‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ API Key! ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    sys.exit(1)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
if not GEMINI_API_KEY.startswith("AIzaSy"):
    print("\n‚ö†Ô∏è  API Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 'AIzaSy'")
    print("üí° ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà: https://makersuite.google.com/app/apikey")
    sys.exit(1)

print("\n" + "=" * 80)
print("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...")
print("=" * 80)

try:
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API
    genai.configure(api_key=GEMINI_API_KEY)
    print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á model
    model = genai.GenerativeModel('gemini-2.5-pro')
    print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á model ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (gemini-2.5-pro)")

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏á‡πà‡∏≤‡∏¢‡πÜ
    print("\nüì® ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö...")
    response = model.generate_content("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏Ñ‡∏£")

    print("\n" + "=" * 80)
    print("‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! API Key ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
    print("=" * 80)
    print(f"\nü§ñ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å Gemini:\n{response.text}")

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö vision capability
    print("\n" + "=" * 80)
    print("üì∏ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡πâ‡∏≤‡∏ô Vision...")
    print("=" * 80)

    try:
        from PIL import Image
        import io

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏î‡∏™‡∏≠‡∏ö (‡∏†‡∏≤‡∏û‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß 100x100)
        test_img = Image.new('RGB', (100, 100), color='green')
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û
        vision_response = model.generate_content([
            "‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡∏™‡∏±‡πâ‡∏ô‡πÜ",
            test_img
        ])

        print(f"‚úÖ Vision API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
        print(f"ü§ñ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏≤‡∏û: {vision_response.text}")

    except Exception as e:
        print(f"‚ö†Ô∏è  Vision test ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
        print("‡πÅ‡∏ï‡πà text generation ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥")

    print("\n" + "=" * 80)
    print("üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:")
    print("=" * 80)
    print("   Model: gemini-2.5-pro")
    print("   Free tier: ‚úÖ ‡∏ü‡∏£‡∏µ!")
    print("   Rate limit: 15 requests/minute")
    print("   Features: Text + Vision")

    print("\n" + "=" * 80)
    print("üéâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Stock Bot Gemini ‡πÅ‡∏•‡πâ‡∏ß!")
    print("=" * 80)
    print("\nüí° ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:")
    print("   python stock_bot_macos_gemini.py")

    print("\nüí∞ ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á Gemini:")
    print("   ‚úÖ ‡∏ü‡∏£‡∏µ 100%! (‡∏†‡∏≤‡∏¢‡πÉ‡∏ô free tier)")
    print("   ‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡πâ‡∏≤‡∏ô Vision ‡∏î‡∏µ‡∏°‡∏≤‡∏Å")
    print("   ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ‡∏î‡∏µ")
    print("   ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢")
    print("   ‚úÖ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢")

except Exception as e:
    print("\n" + "=" * 80)
    print("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!")
    print("=" * 80)
    print(f"\nError: {e}")
    print("\nüí° ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
    print("   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("   2. ‡∏™‡∏£‡πâ‡∏≤‡∏á API Key ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å https://makersuite.google.com/app/apikey")
    print("   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ internet connection")
    print("   4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô rate limit")
    print("\n   ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô environment variable:")
    print("   export GEMINI_API_KEY='AIzaSy-your-key-here'")
    sys.exit(1)
